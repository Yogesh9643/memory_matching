{"ast":null,"code":"var _jsxFileName = \"/home/yogesh/Desktop/WebDev/make-react-apps/B03 - Memory Matching Game/finished/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css'; // image for the pokemon\n// https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png\n\nconst pokemon = [{\n  id: 4,\n  name: 'charizard'\n}, {\n  id: 10,\n  name: 'caterpie'\n}, {\n  id: 77,\n  name: 'ponyta'\n}, {\n  id: 108,\n  name: 'lickitung'\n}, {\n  id: 132,\n  name: 'ditto'\n}, {\n  id: 133,\n  name: 'eevee'\n}];\nconst doublePokemon = shuffle([...pokemon, ...pokemon]);\nexport default function App() {\n  const [opened, setOpened] = useState([]); // using index\n\n  const [matched, setMatched] = useState([]); // pokemon.id\n\n  const [moves, setMoves] = useState(0); // check if there is a match\n  // if there are 2 in the opened array, check if they match\n\n  useEffect(() => {\n    if (opened.length < 2) return;\n    const firstPokemon = doublePokemon[opened[0]];\n    const secondPokemon = doublePokemon[opened[1]];\n    if (firstPokemon.name === secondPokemon.name) setMatched(matched => [...matched, firstPokemon.id]);\n  }, [opened]); // clear cards after 2 have been selected\n\n  useEffect(() => {\n    if (opened.length === 2) setTimeout(() => setOpened([]), 800);\n  }, [opened]); // check if there is a winner\n\n  useEffect(() => {\n    if (matched.length === pokemon.length) alert('you won!');\n  }, [matched]);\n\n  function flipCard(index) {\n    // if same card was clicked\n    if (opened.includes(index)) return;\n    setMoves(moves => moves + 1);\n    setOpened(opened => [...opened, index]);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, moves, \" \", /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"moves\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cards\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, doublePokemon.map((pokemon, index) => {\n    let isFlipped = false; // do some logic to check if flipped\n\n    if (opened.includes(index)) isFlipped = true;\n    if (matched.includes(pokemon.id)) isFlipped = true;\n    return /*#__PURE__*/React.createElement(PokemonCard, {\n      key: index,\n      index: index,\n      pokemon: pokemon,\n      isFlipped: isFlipped,\n      flipCard: flipCard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    });\n  })));\n}\n\nfunction PokemonCard({\n  index,\n  pokemon,\n  isFlipped,\n  flipCard\n}) {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    className: `pokemon-card ${isFlipped ? 'flipped' : ''}`,\n    onClick: () => flipCard(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inner\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"front\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`,\n    alt: pokemon.name,\n    width: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"back\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, \"?\")));\n}","map":{"version":3,"sources":["/home/yogesh/Desktop/WebDev/make-react-apps/B03 - Memory Matching Game/finished/src/App.js"],"names":["React","useState","useEffect","shuffle","pokemon","id","name","doublePokemon","App","opened","setOpened","matched","setMatched","moves","setMoves","length","firstPokemon","secondPokemon","setTimeout","alert","flipCard","index","includes","map","isFlipped","PokemonCard"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\n\n// image for the pokemon\n// https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png\n\nconst pokemon = [\n  { id: 4, name: 'charizard' },\n  { id: 10, name: 'caterpie' },\n  { id: 77, name: 'ponyta' },\n  { id: 108, name: 'lickitung' },\n  { id: 132, name: 'ditto' },\n  { id: 133, name: 'eevee' },\n];\nconst doublePokemon = shuffle([...pokemon, ...pokemon]);\n\nexport default function App() {\n  const [opened, setOpened] = useState([]); // using index\n  const [matched, setMatched] = useState([]); // pokemon.id\n  const [moves, setMoves] = useState(0);\n\n  // check if there is a match\n  // if there are 2 in the opened array, check if they match\n  useEffect(() => {\n    if (opened.length < 2) return;\n\n    const firstPokemon = doublePokemon[opened[0]];\n    const secondPokemon = doublePokemon[opened[1]];\n\n    if (firstPokemon.name === secondPokemon.name)\n      setMatched((matched) => [...matched, firstPokemon.id]);\n  }, [opened]);\n\n  // clear cards after 2 have been selected\n  useEffect(() => {\n    if (opened.length === 2) setTimeout(() => setOpened([]), 800);\n  }, [opened]);\n\n  // check if there is a winner\n  useEffect(() => {\n    if (matched.length === pokemon.length) alert('you won!');\n  }, [matched]);\n\n  function flipCard(index) {\n    // if same card was clicked\n    if (opened.includes(index)) return;\n\n    setMoves((moves) => moves + 1);\n    setOpened((opened) => [...opened, index]);\n  }\n\n  return (\n    <div className=\"app\">\n      <p>\n        {moves} <strong>moves</strong>\n      </p>\n\n      <div className=\"cards\">\n        {doublePokemon.map((pokemon, index) => {\n          let isFlipped = false;\n\n          // do some logic to check if flipped\n          if (opened.includes(index)) isFlipped = true;\n          if (matched.includes(pokemon.id)) isFlipped = true;\n\n          return (\n            <PokemonCard\n              key={index}\n              index={index}\n              pokemon={pokemon}\n              isFlipped={isFlipped}\n              flipCard={flipCard}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction PokemonCard({ index, pokemon, isFlipped, flipCard }) {\n  return (\n    <button\n      className={`pokemon-card ${isFlipped ? 'flipped' : ''}`}\n      onClick={() => flipCard(index)}\n    >\n      <div className=\"inner\">\n        <div className=\"front\">\n          <img\n            src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n            alt={pokemon.name}\n            width=\"100\"\n          />\n        </div>\n        <div className=\"back\">?</div>\n      </div>\n    </button>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}