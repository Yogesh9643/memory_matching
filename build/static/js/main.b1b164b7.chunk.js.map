{"version":3,"sources":["App.js","index.js"],"names":["pokemon","id","name","doublePokemon","shuffle","App","useState","opened","setOpened","matched","setMatched","moves","setMoves","flipCard","index","includes","useEffect","length","firstPokemon","secondPokemon","setTimeout","alert","className","map","isFlipped","PokemonCard","key","onClick","src","alt","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAOMA,G,MAAU,CACd,CAAEC,GAAI,EAAGC,KAAM,aACf,CAAED,GAAI,GAAIC,KAAM,YAChB,CAAED,GAAI,GAAIC,KAAM,UAChB,CAAED,GAAI,IAAKC,KAAM,aACjB,CAAED,GAAI,IAAKC,KAAM,SACjB,CAAED,GAAI,IAAKC,KAAM,WAEbC,EAAgBC,IAAQ,GAAD,OAAKJ,EAAYA,IAE/B,SAASK,IAAO,IAAD,EACAC,mBAAS,IADT,mBACrBC,EADqB,KACbC,EADa,OAEEF,mBAAS,IAFX,mBAErBG,EAFqB,KAEZC,EAFY,OAGFJ,mBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,KA2B5B,SAASC,EAASC,GAEZP,EAAOQ,SAASD,KAEpBF,GAAS,SAACD,GAAD,OAAWA,EAAQ,KAC5BH,GAAU,SAACD,GAAD,4BAAgBA,GAAhB,CAAwBO,QAGpC,OA5BAE,qBAAU,WACR,KAAIT,EAAOU,OAAS,GAApB,CAEA,IAAMC,EAAef,EAAcI,EAAO,IACpCY,EAAgBhB,EAAcI,EAAO,IAEvCW,EAAahB,OAASiB,EAAcjB,MACtCQ,GAAW,SAACD,GAAD,4BAAiBA,GAAjB,CAA0BS,EAAajB,WACnD,CAACM,IAGJS,qBAAU,WACc,IAAlBT,EAAOU,QAAcG,YAAW,kBAAMZ,EAAU,MAAK,OACxD,CAACD,IAGJS,qBAAU,WACJP,EAAQQ,SAAWjB,EAAQiB,QAAQI,MAAM,cAC5C,CAACZ,IAWF,yBAAKa,UAAU,OACb,2BACGX,EADH,IACU,0CAGV,yBAAKW,UAAU,SACZnB,EAAcoB,KAAI,SAACvB,EAASc,GAC3B,IAAIU,GAAY,EAMhB,OAHIjB,EAAOQ,SAASD,KAAQU,GAAY,GACpCf,EAAQM,SAASf,EAAQC,MAAKuB,GAAY,GAG5C,kBAACC,EAAD,CACEC,IAAKZ,EACLA,MAAOA,EACPd,QAASA,EACTwB,UAAWA,EACXX,SAAUA,SASxB,SAASY,EAAT,GAA+D,IAAxCX,EAAuC,EAAvCA,MAAOd,EAAgC,EAAhCA,QAASwB,EAAuB,EAAvBA,UAAWX,EAAY,EAAZA,SAChD,OACE,4BACES,UAAS,uBAAkBE,EAAY,UAAY,IACnDG,QAAS,kBAAMd,EAASC,KAExB,yBAAKQ,UAAU,SACb,yBAAKA,UAAU,SACb,yBACEM,IAAG,wDAAmD5B,EAAQC,GAA3D,QACH4B,IAAK7B,EAAQE,KACb4B,MAAM,SAGV,yBAAKR,UAAU,QAAf,OC3FRS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.b1b164b7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport shuffle from 'lodash.shuffle';\nimport './App.css';\n\n// image for the pokemon\n// https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png\n\nconst pokemon = [\n  { id: 4, name: 'charizard' },\n  { id: 10, name: 'caterpie' },\n  { id: 77, name: 'ponyta' },\n  { id: 108, name: 'lickitung' },\n  { id: 132, name: 'ditto' },\n  { id: 133, name: 'eevee' },\n];\nconst doublePokemon = shuffle([...pokemon, ...pokemon]);\n\nexport default function App() {\n  const [opened, setOpened] = useState([]); // using index\n  const [matched, setMatched] = useState([]); // pokemon.id\n  const [moves, setMoves] = useState(0);\n\n  // check if there is a match\n  // if there are 2 in the opened array, check if they match\n  useEffect(() => {\n    if (opened.length < 2) return;\n\n    const firstPokemon = doublePokemon[opened[0]];\n    const secondPokemon = doublePokemon[opened[1]];\n\n    if (firstPokemon.name === secondPokemon.name)\n      setMatched((matched) => [...matched, firstPokemon.id]);\n  }, [opened]);\n\n  // clear cards after 2 have been selected\n  useEffect(() => {\n    if (opened.length === 2) setTimeout(() => setOpened([]), 800);\n  }, [opened]);\n\n  // check if there is a winner\n  useEffect(() => {\n    if (matched.length === pokemon.length) alert('you won!');\n  }, [matched]);\n\n  function flipCard(index) {\n    // if same card was clicked\n    if (opened.includes(index)) return;\n\n    setMoves((moves) => moves + 1);\n    setOpened((opened) => [...opened, index]);\n  }\n\n  return (\n    <div className=\"app\">\n      <p>\n        {moves} <strong>moves</strong>\n      </p>\n\n      <div className=\"cards\">\n        {doublePokemon.map((pokemon, index) => {\n          let isFlipped = false;\n\n          // do some logic to check if flipped\n          if (opened.includes(index)) isFlipped = true;\n          if (matched.includes(pokemon.id)) isFlipped = true;\n\n          return (\n            <PokemonCard\n              key={index}\n              index={index}\n              pokemon={pokemon}\n              isFlipped={isFlipped}\n              flipCard={flipCard}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nfunction PokemonCard({ index, pokemon, isFlipped, flipCard }) {\n  return (\n    <button\n      className={`pokemon-card ${isFlipped ? 'flipped' : ''}`}\n      onClick={() => flipCard(index)}\n    >\n      <div className=\"inner\">\n        <div className=\"front\">\n          <img\n            src={`https://pokeres.bastionbot.org/images/pokemon/${pokemon.id}.png`}\n            alt={pokemon.name}\n            width=\"100\"\n          />\n        </div>\n        <div className=\"back\">?</div>\n      </div>\n    </button>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}